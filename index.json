[{"content":"PDF Presentation Video Code Security Proofs\nAbstract Cloud infrastructure is experiencing a shift towards disaggregated setups, especially with the introduction of the Compute Express Link (CXL) technology, where byte-addressable ersistent memory (PM) is becoming prominent. To fully utilize the potential of such devices, it is a necessity to access them through network stacks with equivalently high levels of performance (e.g., kernel-bypass, RDMA). While, these advancements are enabling the development of high-performance data management systems, their deployment on untrusted cloud environments also increases the security threats.\nTo this end, we present Anchor, a library for building secure PM systems. Anchor provides strong hardware-assisted security properties, while ensuring crash consistency. Anchor exposes APIs for secure data management within the realms of the established PM programming model, targeting byte-addressable storage devices. Anchor leverages trusted execution environments (TEE) and extends their security properties on PM. While TEE\u0026rsquo;s protected memory region provides a strong foundation for building secure systems, the key challenge is that: TEEs are fundamentally incompatible with PM and kernel-bypass networking approaches-in particular, TEEs are neither designed to protect untrusted non-volatile PM, nor the protected region can be accessed via an untrusted DMA connection. To overcome this challenge, we design a PM engine that ensures strong security properties for the PM data, using confidential and authenticated PM data structures, while preserving crash consistency through a secure logging protocol. We further extend the PM engine to provide remote PM data operations via a secure network stack and a formally verified remote attestation protocol to form an end-to-end system. Our evaluation shows that Anchor incurs reasonable overheads, while providing strong security properties.\nCitation @article{ anchor, author = {Stavrakakis, Dimitrios and Giantsidi, Dimitra and Bailleu, Maurice and S\\\u0026#34;{a}ndig, Philip and Issa, Shady and Bhatotia, Pramod}, title = {Anchor: A Library for Building Secure Persistent Memory Systems}, year = {2023}, issue_date = {December 2023}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {1}, number = {4}, url = {https://doi.org/10.1145/3626718}, doi = {10.1145/3626718}, journal = {Proc. ACM Manag. Data}, month = {dec}, articleno = {231}, numpages = {31}, keywords = {dependable systems, persistent memory, secure data management systems, secure kernel-bypass networking, trusted execution environments} } ","permalink":"https://mbailleu.github.io/publications/anchor/","summary":"PDF Presentation Video Code Security Proofs\nAbstract Cloud infrastructure is experiencing a shift towards disaggregated setups, especially with the introduction of the Compute Express Link (CXL) technology, where byte-addressable ersistent memory (PM) is becoming prominent. To fully utilize the potential of such devices, it is a necessity to access them through network stacks with equivalently high levels of performance (e.g., kernel-bypass, RDMA). While, these advancements are enabling the development of high-performance data management systems, their deployment on untrusted cloud environments also increases the security threats.","title":"Anchor: A Library for Building Secure Persistent Memory Systems"},{"content":"PDF Presentation Video Code\nAbstract Distributed transaction processing is a fundamental building block for large-scale data management in the cloud. Given the threats of security violations in untrusted cloud environments, our work focuses on: How to design a distributed transactional KV store that achieves high-performance serializable transactions, while providing strong security properties?We introduce Treaty, a secure distributed transactional KV storage system that supports serializable ACID transactions while guaranteeing strong security properties: confidentiality, integrity, and freshness. Treaty leverages trusted execution environments (TEEs) to bootstrap its security properties, but it extends the trust provided by the limited enclave (volatile) memory region within a single node to build a secure (stateful) distributed transactional KV store over the untrusted storage, network and machines. To achieve this, Treaty embodies a secure two-phase commit protocol co-designed with a high-performance network library for TEEs. Further, Treaty ensures secure and crash-consistent persistency of committed transactions using a stabilization protocol. Our evaluation on a real hardware testbed based on the YCSB and TPC-C benchmarks shows that Treaty incurs reasonable overheads, while achieving strong security properties.\nCitation @inproceedings{ treaty, author={Giantsidi, Dimitra and Bailleu, Maurice and Crooks, Natacha and Bhatotia, Pramod}, booktitle={2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)}, title={Treaty: Secure Distributed Transactions}, year={2022}, volume={}, number={}, pages={14-27}, keywords={Protocols;Buildings;Distributed databases;Benchmark testing;Libraries;Hardware;Computer crashes}, doi={10.1109/DSN53405.2022.00015} } ","permalink":"https://mbailleu.github.io/publications/treaty/","summary":"PDF Presentation Video Code\nAbstract Distributed transaction processing is a fundamental building block for large-scale data management in the cloud. Given the threats of security violations in untrusted cloud environments, our work focuses on: How to design a distributed transactional KV store that achieves high-performance serializable transactions, while providing strong security properties?We introduce Treaty, a secure distributed transactional KV storage system that supports serializable ACID transactions while guaranteeing strong security properties: confidentiality, integrity, and freshness.","title":"Treaty: Secure Distributed Transactions"},{"content":"PDF Presentation Video Code\nAbstract We introduce Avocado, a secure in-memory distributed storage system that provides strong security, fault-tolerance, consistency (linearizability) and performance for untrusted cloud environments. Avocado achieves these properties based on TEEs, which, however, are primarily designed for securing limited physical memory (enclave) within a single-node system. Avocado overcomes this limitation by extending the trust of a secure single-node enclave to the distributed environment over an untrusted network, while ensuring that replicas are kept consistent and fault-tolerant in a malicious environment. To achieve these goals, we design and implement Avocado underpinning on the cross-layer contributions involving the network stack, the replication protocol, scalable trust establishment, and memory management. Avocado is practical: In comparison to BFT, Avocado provides confidentiality with fewer replicas and is significantly faster—4.5× to 65× for YCSB read and write heavy workloads, respectively.\nCitation @article{ avocado, author = {Maurice Bailleu and Dimitra Giantsidi and Vasilis Gavrielatos and Do Le Quoc and Vijay Nagarajan and Pramod Bhatotia}, title = {Avocado: A Secure {In-Memory} Distributed Storage System}, booktitle = {2021 USENIX Annual Technical Conference (USENIX ATC 21)}, year = {2021}, isbn = {978-1-939133-23-6}, pages = {65--79}, url = {https://www.usenix.org/conference/atc21/presentation/bailleu}, publisher = {USENIX Association}, month = jul } ","permalink":"https://mbailleu.github.io/publications/avocado/","summary":"PDF Presentation Video Code\nAbstract We introduce Avocado, a secure in-memory distributed storage system that provides strong security, fault-tolerance, consistency (linearizability) and performance for untrusted cloud environments. Avocado achieves these properties based on TEEs, which, however, are primarily designed for securing limited physical memory (enclave) within a single-node system. Avocado overcomes this limitation by extending the trust of a secure single-node enclave to the distributed environment over an untrusted network, while ensuring that replicas are kept consistent and fault-tolerant in a malicious environment.","title":"Avocado: A Secure In-Memory Distributed Storage System"},{"content":"PDF Presentation Video Code\nAbstract We introduce TEE-PERF, an architecture-and platform-independent performance measurement tool for trusted execution environments (TEEs). More specifically, TEE-PERF supports method-level profiling for unmodified multithreaded applications, without relying on any architecture-specific hardware features (e.g. Intel VTune Amplifier), or without requiring platform-dependent kernel features (e.g. Linux perf). Moreover, TEE-PERF provides accurate profiling measurements since it traces the entire process execution without employing instruction pointer sampling. Thus, TEE-PERF does not suffer from sampling frequency bias, which can occur with threads scheduled to align to the sampling frequency. We have implemented TEE-P ERF with an easy to use interface, and integrated it with Flame Graphs to visualize the performance bottlenecks. We have evaluated TEE-PERF based on the Phoenix multithreaded benchmark suite and real-world applications (RocksDB, SPDK, etc.), and compared it with Linux perf. Our experimental evaluation shows that TEE-PERF incurs low profiling overheads, while providing accurate profile measurements to identify and optimize the application bottlenecks in the context of TEEs. TEE-PERF is publicly available.\nCitation @inproceedings{ tee-perf, author={Bailleu, Maurice and Dragoti, Donald and Bhatotia, Pramod and Fetzer, Christof}, booktitle={2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)}, title={TEE-Perf: A Profiler for Trusted Execution Environments}, year={2019}, volume={}, number={}, pages={414-421}, keywords={Computer architecture;Tools;Instruction sets;Visualization;Measurement;Hardware;TEE;profiler;SGX;tool}, doi={10.1109/DSN.2019.00050} } ","permalink":"https://mbailleu.github.io/publications/tee_perf/","summary":"PDF Presentation Video Code\nAbstract We introduce TEE-PERF, an architecture-and platform-independent performance measurement tool for trusted execution environments (TEEs). More specifically, TEE-PERF supports method-level profiling for unmodified multithreaded applications, without relying on any architecture-specific hardware features (e.g. Intel VTune Amplifier), or without requiring platform-dependent kernel features (e.g. Linux perf). Moreover, TEE-PERF provides accurate profiling measurements since it traces the entire process execution without employing instruction pointer sampling. Thus, TEE-PERF does not suffer from sampling frequency bias, which can occur with threads scheduled to align to the sampling frequency.","title":"TEE-Perf: A Profiler for Trusted Execution Environments"},{"content":"PDF Presentation Video Code\nAbstract We introduce Speicher, a secure storage system that not only provides strong confidentiality and integrity properties, but also ensures data freshness to protect against rollback/forking attacks. Speicher exports a Key-Value (KV) interface backed by Log-Structured Merge Tree (LSM) for supporting secure data storage and query operations. Speicher enforces these security properties on an untrusted host by leveraging shielded execution based on a hardware-assisted trusted execution environment (TEE)—specifically, Intel SGX. However, the design of Speicher extends the trust in shielded execution beyond the secure SGX enclave memory region to ensure that the security properties are also preserved in the stateful (or non-volatile) setting of an untrusted storage medium, including system crash, reboot, or migration.\nMore specifically, we have designed an authenticated and confidentiality-preserving LSM data structure. We have further hardened the LSM data structure to ensure data freshness by designing asynchronous trusted counters. Lastly, we designed a direct I/O library for shielded execution based on Intel SPDK to overcome the I/O bottlenecks in the SGX enclave. We have implemented Speicher as a fully-functional storage system by extending RocksDB, and evaluated its performance using the RocksDB benchmark. Our experimental evaluation shows that Speicher incurs reasonable overheads for providing strong security guarantees, while keeping the trusted computing base (TCB) small.\nCitation @inproceedings{ speicher, author = {Maurice Bailleu and J{\\\u0026#34;o}rg Thalheim and Pramod Bhatotia and Christof Fetzer and Michio Honda and Kapil Vaswani}, title = {{SPEICHER}: Securing {LSM-based} {Key-Value} Stores using Shielded Execution}, booktitle = {17th USENIX Conference on File and Storage Technologies (FAST 19)}, year = {2019}, isbn = {978-1-939133-09-0}, address = {Boston, MA}, pages = {173--190}, url = {https://www.usenix.org/conference/fast19/presentation/bailleu}, publisher = {USENIX Association}, month = feb } ","permalink":"https://mbailleu.github.io/publications/speicher/","summary":"PDF Presentation Video Code\nAbstract We introduce Speicher, a secure storage system that not only provides strong confidentiality and integrity properties, but also ensures data freshness to protect against rollback/forking attacks. Speicher exports a Key-Value (KV) interface backed by Log-Structured Merge Tree (LSM) for supporting secure data storage and query operations. Speicher enforces these security properties on an untrusted host by leveraging shielded execution based on a hardware-assisted trusted execution environment (TEE)—specifically, Intel SGX.","title":"SPEICHER: Securing LSM-based Key-Value Stores using Shielded Execution"},{"content":"PDF Presentation Video Code\nAbstract Example implementations relate to an interoperable capability. For example, in an implementation, an interoperable capability is recognizable by a plurality of kernels of a system, and the interoperable capability references a local capability of respective kernels. Consistency among the local capabilities of the kernels and the interoperable capability is maintained, in response to operations invoked on the interoperable capability.\n","permalink":"https://mbailleu.github.io/publications/caps/","summary":"PDF Presentation Video Code\nAbstract Example implementations relate to an interoperable capability. For example, in an implementation, an interoperable capability is recognizable by a plurality of kernels of a system, and the interoperable capability references a local capability of respective kernels. Consistency among the local capabilities of the kernels and the interoperable capability is maintained, in response to operations invoked on the interoperable capability.","title":"Patent: Interoperable capabilities "},{"content":" PDF version\nResearch Interests My research interests lie in the broad area of computer systems, including distributed, dependable systems, operating systems, trusted computing and storage systems.\nExperience since 09/23 Senior Researcher, Huawei R\u0026D, Edinburgh, UK\nRedesgining database operators for modern systems.\nResearching and designing efficent operator implementation for databases, with a focus on hash join and hash aggregation functions. 05/22 - 08/22 Research Intern, Microsoft Research, Cambridge, UK\nRollback protected confidential writable storage.\nResearching and designing a block level storage system which provides rollback protection for confidential containers. Additionally, exploring the possibility to lift the protection from the block storage layer into a file system layer for increased performance. 10/15 - 03/16 Research Associate, HP Labs, Palo Alto, USA\nPersistent Capabilities for L4/Fiasco.OC\nResearching the use of kernel capabilities for NVM, in particular using L4/Fiasco.OC capabilities to manage NVM. Also exploring the possiblities to use capabilities over multiple nodes to mediate access to shared resources. 04/14 - 12/14 Research Assistant, TU Dresden, Germay\nImplementing, testing and evaluating different checksum methods for IPC in Fiasco.OC and L4Re. Education 07/23 PhD thesis: Secure Storage Systems for Untrusted Cloud Environments\nAdvisor: Prof. Dr.-Ing. Pramod Bhatotia\nSpecialization in system architecture, especially trusted cloud storage 09/17 Diplom thesis: Byte-granular memory mapping with CHERI and L4Re.\nAdvisor: Prof. Dr. rer. nat. Hermann Härtig\nSpecialization in operating systems Teaching 03/22 - 08/23 Teaching Assistant, TU Munich, Germany\nCloud Lab 03/21 - 08/23 Teaching Assistant, TU Munich, Germany\nAdvanced System Programming in C/Rust 03/21 - 08/23 Teaching Assistant, The University of Edinburgh, UK\nExtreme Computing Publications 06/24 Anchor: A Library for Building Secure Persistent Memory Systems\nSIGMOD'24, Santiago, Chile\nDimitris Stavrakakis, Dimitra Giantsidi, Maurice Bailleu, Philip Sändig, Shady Issa and Pramod Bhatotia\n06/22 Treaty: Secure Distributed Transactions\nIEEE/IFIP DSN’22, Baltimore, USA\nDimitra Giantsidi, Maurice Bailleu, Natacha Crooks and Pramod Bhatotia\nCode available: https://github.com/TUM-DSE/Treaty 07/21 Avocado: A Secure In-Memory Distributed Storage System\nUSENIX ATC’21, Online Event/Santa Clara, USA\nMaurice Bailleu, Dimitra Giantsidi, Vasilis Gavrielatos, Do Le Quoc, Vijay Nagarajan and Pramod Bhatotia\nCode available: https://github.com/mbailleu/avocado 06/19 TEE-Perf: A Profiler for Trusted Execution Environments\nIEEE/IFIP DSN'19, Portland, USA\nMaurice Bailleu, Donald Dragoti, Pramod Bhatotia and Christof Fetzer\nCode available: https://github.com/mbailleu/tee-perf 02/19 SPEICHER: Securing LSM-based Key-Value Stores using Shielded Execution\nUSENIX FAST’19, Boston, USA\nMaurice Bailleu, Jörg Thalheim, Pramod Bhatotia, Christof Fetzer, Michio Honda and Kapil Vaswani 02/19 Interoperable capabilities\nPatent: US20170329526A1\nReto Achermann, Maurice Bailleu, Dejan S. Milojicic and Gabriel Parmer Talks 12/22 LSDS at Imperial College, London, UK\nSecure Storage for the Cloud\nSeminar talk 07/21 USENIX ATC'21, Online Event/Santa Clara, USA\nAvocado: A Secure In-Memory Distributed Storage System\nConference talk 12/19 Huawei Workshop, Shanghai, China\nPoster session 06/19 Intel Labs, Hillsboro, USA\nSPEICHER: Securing LSM-based Key-Value Stores using Shielded Execution\nProject presentation 06/19 IEEE/IFIP DSN'19, Portland, USA\nTEE-Perf: A Profiler for Trusted Execution Environment\nConference talk 02/19 USENIX FAST'19, Boston, USA\nSPEICHER: Securing LSM-based Key-Value Stores using Shielded Execution\nConference talk Awards 06/22 IEEE/IFIP DSN’22 Best paper finalist\n10/21 2021-2022 Microsoft Research PhD Fellowship\n06/19 Travel grant for DSN’19\n","permalink":"https://mbailleu.github.io/cv/cv/","summary":"PDF version\nResearch Interests My research interests lie in the broad area of computer systems, including distributed, dependable systems, operating systems, trusted computing and storage systems.\nExperience since 09/23 Senior Researcher, Huawei R\u0026D, Edinburgh, UK\nRedesgining database operators for modern systems.\nResearching and designing efficent operator implementation for databases, with a focus on hash join and hash aggregation functions. 05/22 - 08/22 Research Intern, Microsoft Research, Cambridge, UK\nRollback protected confidential writable storage.","title":"Maurice Bailleu"}]